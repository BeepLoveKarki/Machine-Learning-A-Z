print("hii")
sum(1,5)
diff(1,2)
diff(2,1)
diff(2,)
a
print("hi")
print(mean(2:5))
func<-function(a){}
func<-function(a){print(a)}
func(5)
print(2^6)
print(median(2:5))
a='Hi"'
print(a)
a='H\''
print(a)
print(nachar(a))
print(nchar(a))
a<-"Hi Boy"
print(substring(a,0,1))
print(substring(a,0,2))
print(substring(a,1,2))
print(tolower(a))
format("a",digits=5)
format("a",digits=5)
v<-c("a",1)
print(v)
v<-c(0,1)
print(v)
v<-c(0,"1")
print(v)
library(shiny)
install.packages("shiny")
library(shiny)
runExample("01_hello")
runExample("08_html")
runExample("01_hello")
runExample("01_hello")
print("Hello world")
setwd("~/Machine_Learning_AZ_Template_Folder/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression")
dataset = read.csv('Position_Salaries.csv')
View(dataset)
View(dataset)
dataset=datset[,2:3]
dataset=dataset[,2:3]
View(dataset)
View(dataset)
#Fitting linear regression to dataset
lin_reg=lm(formula=Salary~.,data=dataset)
summary(lin_reg)
dataset$Level2=dataset$Level^2
dataset$Level3=dataset$Level^3
ploy_reg=lm(formula=Salary~.,data=dataset)
dataset$Level2=dataset$Level^2
dataset$Level3=dataset$Level^3
poly_reg=lm(formula=Salary~.,data=dataset)
summary(ploy_reg)
#visualize linear regression model
library(ggplot2)
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
colour='red')+
geom_line(aes(x=dataset$Level,y=predict(regressor,newdata=dataset)),
colour='blue')+
ggtitle('True vs bluff(Linear regression)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
colour='red')+
geom_line(aes(x=dataset$Level,y=predict(lin_reg,newdata=dataset)),
colour='blue')+
ggtitle('True vs bluff(Linear regression)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
colour='red')+
geom_line(aes(x=dataset$Level,y=predict(lin_reg,newdata=dataset)),
colour='blue')+
ggtitle('True vs bluff (Linear regression)')+
xlab('Level')+
ylab('Salary')
#visualize polynomial regression model
library(ggplot2)
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
colour='red')+
geom_line(aes(x=dataset$Level,y=predict(poly_reg,newdata=dataset)),
colour='blue')+
ggtitle('True vs bluff (Polynomial regression)')+
xlab('Level')+
ylab('Salary')
dataset$Level2=dataset$Level^2
dataset$Level3=dataset$Level^3
dataset$Level4=dataset$Level^4
poly_reg=lm(formula=Salary~.,data=dataset)
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
colour='red')+
geom_line(aes(x=dataset$Level,y=predict(poly_reg,newdata=dataset)),
colour='blue')+
ggtitle('True vs bluff (Polynomial regression)')+
xlab('Level')+
ylab('Salary')
y_pred=predict(lin_reg,data.frame(Level=6.5))
y_pred1=predict(poly_reg,data.frame(Level=6.5,Level2=6.5^2,Level3=6.5^3,Level4=6.5^4))
setwd("~/Machine_Learning_AZ_Template_Folder/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
setwd("~/Machine_Learning_AZ_Template_Folder/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
install.packages('e1071')
library(e1071)
regressor=svm(formula=Salary~.,data=dataset,type='eps-regression')
#Fitting SVR model to dataset
install.packages('e1071')
library(e1071)
regressor=svm(formula=Salary~.,data=dataset,type='eps-regression')
y_pred=predict(regessor,data.frame(Level=6.5))
#predict data using SVR
y_pred=predict(regressor,data.frame(Level=6.5))
y_pred=predict(regressor,data.frame(Level=6.5))
dataset=dataset[,2:3]
dataset$Level2=dataset$Level^2
y_pred=predict(regressor,data.frame(Level=6.5,Level2=6.5^2))
dataset$Level3=dataset$Level^3
dataset$Level4=dataset$Level^4
dataset = read.csv('Position_Salaries.csv')
dataset=dataset[,2:3]
dataset$Level2=dataset$Level^2
dataset$Level3=dataset$Level^3
dataset$Level4=dataset$Level^4
y_pred=predict(regressor,data.frame(Level=6.5,
Level2=6.5^2,
Level3=6.5^3,
Level4=6.5^4))
