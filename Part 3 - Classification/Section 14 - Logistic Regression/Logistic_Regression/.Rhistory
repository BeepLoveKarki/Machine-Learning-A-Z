print("hii")
sum(1,5)
diff(1,2)
diff(2,1)
diff(2,)
a
print("hi")
print(mean(2:5))
func<-function(a){}
func<-function(a){print(a)}
func(5)
print(2^6)
print(median(2:5))
a='Hi"'
print(a)
a='H\''
print(a)
print(nachar(a))
print(nchar(a))
a<-"Hi Boy"
print(substring(a,0,1))
print(substring(a,0,2))
print(substring(a,1,2))
print(tolower(a))
format("a",digits=5)
format("a",digits=5)
v<-c("a",1)
print(v)
v<-c(0,1)
print(v)
v<-c(0,"1")
print(v)
library(shiny)
install.packages("shiny")
library(shiny)
runExample("01_hello")
runExample("08_html")
runExample("01_hello")
runExample("01_hello")
print("Hello world")
dataset = read.csv('Social_Network_Ads.csv')
setwd("~/Machine_Learning_AZ_Template_Folder/Part 3 - Classification/Section 14 - Logistic Regression/Logistic_Regression")
dataset = read.csv('Social_Network_Ads.csv')
dataset=dataset[,3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
classifier=glm(formula=Purchased ~ ., family=binomial, data=training_set)
prob_predict=predict(classifier,type='response',newdata=test_data[-3])
y_pred=ifelse(prob_predict>0.5,1,0)
training_set = scale(training_set[,1:2])
test_set = scale(test_set[,1:2])
classifier=glm(formula=Purchased ~ ., family=binomial, data=training_set)
classifier=glm(formula=Purchased ~ ., family=binomial,
data=data.frame(training_set))
classifier=glm(formula=Purchased ~ ., family=binomial,
data=training_set)
View(dataset)
View(dataset)
View(dataset)
View(training_set)
View(training_set)
training_set[,1:2] = scale(training_set[,1:2])
test_set[,1:2] = scale(test_set[,1:2])
View(training_set)
View(training_set)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
View(training_set)
View(training_set)
training_set[,1:2] = scale(training_set[,1:2])
View(training_set)
test_set[,1:2] = scale(test_set[,1:2])
classifier=glm(formula=Purchased ~ ., family=binomial,
data=training_set)
prob_predict=predict(classifier,type='response',newdata=test_data[-3])
prob_predict=predict(classifier,type='response',newdata=test_set[-3])
y_pred=ifelse(prob_predict>0.5,1,0)
cm=table(test_set[,3],y_pred)
cm
library(ElemStatLearn)
install.packages('ElemStatLearn')
library(ElemStatLearn)
set = training_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2)
colnames(grid_set) = c('Age', 'EstimatedSalary')
prob_set = predict(classifier, type = 'response', newdata = grid_set)
y_grid = ifelse(prob_set > 0.5, 1, 0)
plot(set[, -3],
main = 'Logistic Regression (Training set)',
xlab = 'Age', ylab = 'Estimated Salary',
xlim = range(X1), ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2)), add = TRUE)
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
